name: Gradle

on:
  pull_request:
    branches: [ v1.* ]
  pull_request_target:
    branches: [ v1.* ]
    types: [ closed ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Validate gradle wrapper
      uses: gradle/wrapper-validation-action@v1
    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: 17

    - name: Restore caches
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/build.gradle', '**/*.gradle*', 'gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-${{ hashFiles('**/build.gradle', '**/*.gradle*' ,'gradle-wrapper.properties') }}
          ${{ runner.os }}-gradle-

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build -x test
    - name: Run unit tests
      run: ./gradlew test

    - uses: actions-ecosystem/action-release-label@v1
      if: startsWith(github.ref, 'refs/heads/v1.') && github.event.pull_request.merged == true && github.repository == 'MockBukkit/MockBukkit'
      id: release-label
      with:
        label_prefix: release/
    - uses: actions-ecosystem/action-get-latest-tag@v1
      id: get-latest-tag
      if: startsWith(github.ref, 'refs/heads/v1.') && github.event.pull_request.merged == true && ${{ steps.release-label.outputs.level != null }}
      with:
        semver_only: true
    - uses: actions-ecosystem/action-bump-semver@v1
      id: bump-semver
      if: startsWith(github.ref, 'refs/heads/v1.') && github.event.pull_request.merged == true && ${{ steps.release-label.outputs.level != null }}
      with:
        current_version: ${{ steps.get-latest-tag.outputs.tag }}
        level: ${{ steps.release-label.outputs.level }}

    - name: Grant execute permission for gradlew
      if: startsWith(github.ref, 'refs/heads/v1.') && github.event.pull_request.merged == true && ${{ steps.bump-semver.outputs.new_version != null }}
      run: chmod +x gradlew
    - name: Build with Gradle
      if: startsWith(github.ref, 'refs/heads/v1.') && github.event.pull_request.merged == true && ${{ steps.bump-semver.outputs.new_version != null }}
      run: ./gradlew build
    - name: Run unit tests
      if: startsWith(github.ref, 'refs/heads/v1.') && github.event.pull_request.merged == true && ${{ steps.bump-semver.outputs.new_version != null }}
      run: ./gradlew test

    - name: Store Private key
      if: startsWith(github.ref, 'refs/heads/v1.') && github.event.pull_request.merged == true && ${{ steps.bump-semver.outputs.new_version != null }}
      uses: DamianReeves/write-file-action@v1.0
      with:
        path: private.key
        contents: ${{ secrets.PRIV_KEY }}
        write-mode: overwrite
    - name: Publish
      if: startsWith(github.ref, 'refs/heads/v1.') && github.event.pull_request.merged == true && ${{ steps.bump-semver.outputs.new_version != null }}
      env:
        OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        SIGN_KEY: ${{ secrets.PRIV_KEY_PASS }}
      run: |
        mkdir -p $HOME/.gnupg
        echo use-agent >> $HOME/.gnupg/gpg.conf
        echo pinentry-mode loopback >> $HOME/.gnupg/gpg.conf
        echo allow-loopback-pinentry >> $HOME/.gnupg/gpg-agent.conf
        gpg --batch --import private.key
        gpg --batch --export-secret-keys --passphrase $SIGN_KEY "Sebastiaan de Schaetzen <sebastiaan.de.schaetzen@gmail.com>" > private.gpg

        NEW_VERSION=$(echo ${{ steps.bump-semver.outputs.new_version }} | sed -e 's/^v//')

        ./gradlew publishMockBukkitPublicationToRepositoryRepository \
          -Pmockbukkit.version=$NEW_VERSION \
          -PossrhUsername=seeseemelk \
          -PossrhPassword=$OSSRH_PASSWORD \
          -Psigning.secretKeyRingFile=private.gpg \
          -Psigning.keyId=${{ secrets.PRIV_KEY_ID }} \
          -Psigning.password=$SIGN_KEY
    - name: Push tag
      uses: actions-ecosystem/action-push-tag@v1
      if: startsWith(github.ref, 'refs/heads/v1.') && github.event.pull_request.merged == true && ${{ steps.bump-semver.outputs.new_version != null }}
      with:
        tag: ${{ steps.bump-semver.outputs.new_version }}
        message: '${{ steps.bump-semver.outputs.new_version }}: PR #${{ github.event.pull_request.number }} ${{ github.event.pull_request.title }}'
